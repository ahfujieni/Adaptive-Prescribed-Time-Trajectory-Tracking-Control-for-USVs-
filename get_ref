function [xd,hd_xd,hdd] = get_ref(T,t_end)
t = 0:T:t_end;  
n = length(t);  

% 预分配存储空间
x_t = zeros(1, n);
y_t = zeros(1, n);
x_dot = zeros(1, n);
y_dot = zeros(1, n);
x_ddot = zeros(1, n);
y_ddot = zeros(1, n);
psi_t = zeros(1, n);
psi_dot = zeros(1, n);
psi_ddot = zeros(1, n);
x_t(1) =0;
y_t(1) = 0;
psi_t(1)=0;
% 使用for循环逐步计算各个值
for i = 2:n
    % 位置的解析表达式
    x_t(i) =8*sin(0.05*t(i));
    y_t(i) = 8*(1-cos(0.05*t(i)));
    % x_t(i) =5*cos(0.2*t(i))-5;
    % y_t(i) = 0.5*t(i);


%     % 速度 (一阶导数)
%     x_dot(i) = 2 * cos(0.2 * t(i));
%     y_dot(i) = -2 * sin(0.2 * t(i));
% 
%     % 二阶导数 (加速度)
%     x_ddot(i) = -0.4 * sin(0.2 * t(i));
%     y_ddot(i) = -0.4 * cos(0.2 * t(i));

    % 计算航向角 ψ(t)
    psi_t(i) = atan2((y_t(i)-y_t(i-1))/T, (x_t(i)-x_t(i-1))/T);
    if psi_t(i) <0
        psi_t(i) =psi_t(i)+2*pi;
    end

%     psi_t(i) = wrapToPi(psi_t(i));
%     % 航向角的变化率 (使用链式法则)
%     psi_dot(i) = (x_dot(i) * y_ddot(i) - y_dot(i) * x_ddot(i)) / (x_dot(i)^2 + y_dot(i)^2);
% %     psi_dot(i) = 0;
%     % 航向角的二阶导数 (可以进一步计算或根据其他模型定义)
%     psi_ddot(i) = (x_ddot(i) * y_ddot(i)) / (x_dot(i)^2 + y_dot(i)^2); % 示例计算
%     psi_ddot(i) = 0;
end

for i=1:n-1
      % 速度 (一阶导数)
    x_dot(i) = (x_t(i+1)-x_t(i))/T;
    y_dot(i) = (y_t(i+1)-y_t(i))/T;
    psi_dot(i) = (psi_t(i+1)-psi_t(i))/T;

end

for i=1:n-2
      % 速度 (一阶导数)
    x_ddot(i) = (x_dot(i+1)-x_dot(i))/T;
    y_ddot(i) = (y_dot(i+1)-y_dot(i))/T;
    psi_ddot(i) = (psi_dot(i+1)-psi_dot(i))/T;

end
% 组合参考状态向量 xd 和 h_d(x_d)
xd = [x_t; y_t; psi_t; ];
hd_xd = [x_dot; y_dot; psi_dot; ];  % h_d(x_d)
hdd=[x_ddot;y_ddot;psi_ddot];
hd_xd(3,1)=hd_xd(3,2);
hdd(3,1)=hdd(3,2);
end

